// Bad example
public class OrderProcessor
{
    public void ProcessOrder(Order order)
    {
        // code to process the order
        File.WriteAllText("order.txt", order.ToString());
    }
}

// Good example
public class OrderProcessor
{
    public void ProcessOrder(Order order)
    {
        // code to process the order
        string filePath = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData), "order.txt");
        File.WriteAllText(filePath, order.ToString());
    }
}

//The bad example writes the order information to a fixed file path "order.txt" 
//this could cause compatibility issues if the application is deployed on different operating systems 
//or if the user doesn't have write permissions to that directory. The good example writes the order information to a file located in the application data folder, 
//this is a more suitable location to store application-specific data and it's more compatible across different operating systems.